
Compiling and running t6p1p9d7

P5 Pascal compiler vs. 1.4.x
Pascal-P5 complies with the requirements of level 0 of ISO/IEC 7185.


     1      -32 {TEST 6.1.9-7, CLASS=EXTENSION, SUBCLASS=IMPLEMENTATIONDEFINED} 
     2      -32  
     3      -32 {: This program checks whether equivalent symbols can be used for 
     4      -32    the standard reference representation. } 
     5      -32 {  Commonly accepted equivalent symbols for the relational operators 
     6      -32    <,>,<=,>=,<> are checked. However, they are not standard Pascal. 
     7      -32    They are implemented if the program prints EQUIVALENT RELATIONAL 
     8      -32    SYMBOLS IMPLEMENTED. } 
     9      -32 {V3.0: Test renumbered (was 6.11-3) to correspond with DP7185. 
    10      -32    Class changed to EXTENSION because these alternate symbols 
    11      -32    are not prescribed in DP7185. Writes revised accordingly. 
    12      -32    Unnecessary vars l and b removed. } 
    13      -32  
    14      -32 program t6p1p9d7(output); 
    15      -32 var 
    16      -32    j,k : integer; 
    17      -32 begin 
    18        3    writeln(' EQUIVALENT RELATIONAL SYMBOLS IMPLEMENTED'); 
    19       13    j:=1; 
    20       15    k:=2; 
    21       17    if (k GT j) and (j LT k) and (k GE j) and (j LE k) and (j NE k) then 
    21   ****             ^59          ^59    ^134  ^59          ^59          ^59
    22       23       writeln(' IMPLEMENTATION DEFINED...6.1.9-7') 
    23       29    else 
    24       32       writeln(' FAIL...6.1.9-7, EQUIVALENT SYMBOLS') 
    25       38 end. 

Errors in program: 6

Error numbers in listing:
-------------------------
 59  Error in variable
134  Illegal type of operand(s)

P5 Pascal interpreter vs. 1.4.x

Assembling/loading program

*** Source program contains errors: 6

program complete

Compiling and running t6p1p9d8

P5 Pascal compiler vs. 1.4.x
Pascal-P5 complies with the requirements of level 0 of ISO/IEC 7185.


     1      -32 {TEST 6.1.9-8, CLASS=EXTENSION, SUBCLASS=IMPLEMENTATIONDEFINED} 
     2      -32  
     3      -32 {: This program checks whether commonly accepted alternate 
     4      -32    symbols can be used for the colon, semicolon and 
     5      -32    assignment (:=) symbols. } 
     6      -32 {  All the alternate symbols are  implemented if the program prints 
     7      -32    EQUIVALENT SYMBOLS IMPLEMENTED. However these equivalent 
     8      -32    symbols are not standard Pascal. } 
     9      -32 {V3.0: Test renumbered to correspond with DP7185. 
    10      -32    This test was previously part of 6.11-2, but has 
    11      -32    been separated from the rest of that test, which tests 
    12      -32    equivalent symbols that must conform. } 
    13      -32  
    14      -32 program t6p1p9d8(output); 
    15      -32 var 
    16      -32    i % integer .,  (* % possibly represents colon *) 
    16   ****       ^25^6
    17      -32    s % real .,     (* ., possibly represents semicolon *) 
    17   ****       ^25^6
    18      -32 begin 
    18   ****       ^2,5,10,14
    19        3    i %= 5 .,       (* %= possibly represents assignment *) 
    19   ****       ^25^59 ^2,6
    20        5    s .= 1.0 .,     (* and/or maybe .= does *) 
    20   ****         ^2,6   ^2,6
    21        5    writeln(' EQUIVALENT SYMBOLS IMPLEMENTED'); 
    21   ****                                                ^51
    22        5    writeln(' IMPLEMENTATION DEFINED...6.1.9-8') 
    23       11 end. 
s          unreferenced


Errors in program: 17

Error numbers in listing:
-------------------------
  2  Identifier expected
  5  ':' expected
  6  Illegal symbol
 10  Error in type
 14  ';' expected
 25  Illegal source character
 51  ':=' expected
 59  Error in variable

P5 Pascal interpreter vs. 1.4.x

Assembling/loading program

*** Source program contains errors: 17

program complete

Compiling and running t6p8p3p5d16

P5 Pascal compiler vs. 1.4.x
Pascal-P5 complies with the requirements of level 0 of ISO/IEC 7185.


     1      -32 {TEST 6.8.3.5-16, CLASS=EXTENSION, SUBCLASS=CONFORMANCE} 
     2      -32  
     3      -32 {: This test checks whether an otherwise clause in a case-statement 
     4      -32    is accepted. } 
     5      -32 {  The convention is that adopted at the UCSD Pascal 
     6      -32    workshop in July 1978. The extension is accepted if the program 
     7      -32    prints PASS. } 
     8      -32 {V3.0: Value check made more complete. Variable 'counter' not needed. 
     9      -32    Was previously 6.8.3.5-14. } 
    10      -32  
    11      -32 program t6p8p3p5d16(output); 
    12      -32 var 
    13      -32    i,j,k:integer; 
    14      -32 begin 
    15        3    j:=0; k:=0; 
    16        9    for i:=0 to 10 do 
    17       19       case i of 
    18       21       1,3,5,7,9: 
    19       21          j:=j+1 
    20       22       otherwise 
    20   ****                 ^6,104
    21       22          k:=k+1 
    21   ****            ^59
    22       22       end; 
    23       47    if (j=5) and (k=6) then 
    24       55       writeln(' PASS...6.8.3.5-16') 
    25       61    else 
    26       64       writeln(' FAIL...6.8.3.5-16, OTHERWISE') 
    27       70 end. 

Errors in program: 3

Error numbers in listing:
-------------------------
  6  Illegal symbol
 59  Error in variable
104  Identifier not declared

P5 Pascal interpreter vs. 1.4.x

Assembling/loading program

*** Source program contains errors: 3

program complete
